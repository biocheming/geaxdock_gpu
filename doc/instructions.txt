                  A LA-SiGMA Software Distribution
             GeauxDock: GPU Accelerated Molecular Docking
                  Version 0 (r001) - 15 November 2016
              Copyright 2014 Louisiana State University
	      
This package contains codes and sample data for running molecular
docking simulation on systems equipped with NVidia GPU. 
	      
For the latest version and other resources visit
http://lasigma.loni.org/package/dock/

LA-SiGMA, the Louisiana Alliance for Simulation-Guided Materials
Applications, is a statewide interdisciplinary collaboration of
material and computer scientists developing computational resources
tuned for the latest generation of accelerator-equipped systems. The
Alliance also develops graduate curricula and is engaged in multiple
outreach activities. Visit us at http://lasigma.loni.org .

This work was supported in part by the National Science Foundation
under the NSF EPSCoR Cooperative Agreement No. EPS-1003897 with
additional support from the Louisiana Board of Regents.

=== Description
GeauxDock is an ultra-fast automated docking program, designed to predict
how small ligands bind to pharmacologically relevant macromolecules.

GeauxDock  employs a novel hybrid force field and a Monte Carlo protocol for 
the efficient sampling of conformational space.

The codes have been tuned for NVidia Fermi- and Kepler-Generation Graphics 
processing unit(GPU).

GeauxDock has applications in:
1. ligand virtual screening
2. structure-based drug design
3. drug repositioning and polypharmacology


=== Purpose
The purpose of molecular docking is to predict the preferred orientation of 
small ligands within the binding sites of pharmacologically relevant 
macromolecules as well as to reliably estimate the associated strength of 
binding. GeauxDock simulates small molecule binding to proteins expanding the 
repertoire of tools for computer-aided structure-based drug discovery.

=== Specifications 
Compared to other ligand docking programs, GeauxDock offers several unique 
features:

1. A mixed-resolution of protein-ligand complexes. Ligands are treated at the 
atomic level, whereas proteins are coarse-grained representing individual 
residues by sets of effective points: the backbone alpha carbon, the geometric 
center of a peptide plate, and either one or two effective points representing 
the side chain (depending on the size).

2. A high tolerance to target structure deformations. As a consequence of the 
mixed-resolution, GeauxDock is fairly insensitive to distortions in protein 
structures. Thus, experimental structures in their apo conformational states as 
well as various quality protein models can be used as targets for small 
molecule docking.

3. A combined evolution/physics-based force field. The energy function 
implemented in GeauxDock integrates evolution- and physics-based components. 
The relative contribution of these terms depends on the amount of evolutionary 
information extracted from homologous complexes. In the absence of homologues, 
weaker evolutionary-derived restraints are compensated by the stronger 
contribution of physics-based energy terms.The capability of the force field to 
reproduce experimental ligand binding poses and the corresponding binding 
affinities was tested on the Astex/CCDC and BindingDB datasets of 
pharmacologically relevant protein-ligand complexes.

4. Monte Carlo sampling scheme. GeauxDock uses the Replica Exchange Monte Carlo 
algorithm to efficiently explore the conformational space of protein-ligand 
interactions. This protocol was optimized to rapidly discover near-native 
ligand configurations.

4. Computations on graphics processing units (GPU). GeauxDock is implemented in 
CUDA-C. The code exploits the coarse-grained parallelisms for multiple 
replicas; specifically, replica simulations are dispatched on multiple CUDA 
thread blocks. The computation of molecular interactions utilizes the 
fine-grained parallelism using massive CUDA threads.


=== Prerequisites

GeauxDock has been tested on the following OS:

  Red Hat Enterprise Linux Version 6.5
  Red Hat Enterprise Linux Server release 6.2

GeauxDock has been tested with the following packages:

 CUDA 6.5 and the NVidia binary GPU drivers
 gcc 4.4.7
 boost 1.55.0 INTEL-14.0.2

=== Steps - Initial Setup and Simple Run

Follow these steps to setup and run the code the first time. The sample 
commands are for a user with home directory "/home/smith/“ and who has unpacked 
the GeauxDock distribution into a directory “dock/“, so that the path to the 
readme file would be “/home/smith/dock/README.txt”.

 [ ]  Install Prerequisites
      Review the list of prerequisites, and install what is
      needed. 


 [ ]  Set Location of CUDA and Boost in the dock/src/makefile

      example:
	    LIBPATH := -L/usr/local/packages/cuda/6.5/lib64
      BOOST_BASE=/usr/local/packages/boost/1.55.0/INTEL-14.0.2-python-2.7.7-anaconda


 [ ]  Build the Code
      Commands:

      % cd /home/smith/dock/src/
      % make

      If the build is successful a executable named "dock" will be created
      in the src directory.  If not, find an experienced programmer
      to help identify and fix the problems.
 

 [ ]  Run
      See the example bash script: dock/data/dock.bash
      Comands:

      % cd dock/data
      % bash dock.bash

      A file named 1a07C1.csv will be created, which records the trajectory of
      docking.


=== Documentation of Features

== Command-line options

  -h [ --help ]         Print help messages
  -p [ --pdb ] arg      protein path (PDB)
  -l [ --sdf ] arg      ligand path (SDF)
  -s [ --ff ] arg       force field path
  --para arg            parameter file path
  -i [ --id ] arg       complex id
  -o [ --csv ] arg      trajectories
  --nc arg
  --nt arg              number of temperatures
  --ceiling_temp arg    ceiling temperature
  --floor_temp arg      floor temperature
  -t arg                translational scale
  -r arg                rotational scale


== Output format
1. standard output, including 
   * info on intput and output data paths
   * simulation parameter setup
   * runtime performance measurements

2. csv file recording docking trajectories


=== Development History

== Discussion of the code origin
GeauxDock was designed to use computer-generated protein models as targets for 
small molecule docking in structure-based drug discovery. The current 
high-performance implementation is based on a serial C++ version written by 
Michal Brylinski at Louisiana State University.

This software contains source code provided by NVIDIA Corporation.

== Changes in each release.
Second release.
